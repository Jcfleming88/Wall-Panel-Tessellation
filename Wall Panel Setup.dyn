{
  "Uuid": "81a11998-aebb-4db6-948b-edbd5d841d4b",
  "IsCustomNode": false,
  "Description": null,
  "Name": "Wall Panel Setup",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Nodes.DSEdgeSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "920f83e1-c1de-4e7a-aa21-880e81b04129-00286661:8:LINEAR"
      ],
      "Id": "4bceb8fca29c42ce89a2022a5939b6c2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ba491645c7584f349e2a95b1d5b42fdf",
          "Name": "Curve",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "Dynamo.Nodes.DSEdgeSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "920f83e1-c1de-4e7a-aa21-880e81b04129-00286661:19:LINEAR"
      ],
      "Id": "b90954a764684e4598a71bf54aa906b9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "03014656112a4496b28f74c9bf378c20",
          "Name": "Curve",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "53a9abcf5f9c4605a12d83dbe8ea0563",
      "Inputs": [
        {
          "Id": "a1d4898e644f40f3a4954b9c0723a223",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "655b6d7140e94928a9a5d44dff61e1cf",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "72e2b4c3df4142389291658dc5aafa4b",
      "Inputs": [
        {
          "Id": "290c37e871694bccb340cbaefaf5d5c7",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d1d96fb27c9b4d918f3291a122779a2e",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtSegmentLength@double",
      "Id": "f904f066f0ac4f7eb4e2c56b2ea5a0ac",
      "Inputs": [
        {
          "Id": "f6ed637dc57147e28e942ceb8c7f4b1d",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bc206fd926a14189b6019b304eb5a5de",
          "Name": "segmentLength",
          "Description": "The distance along the curve at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7fd0382ed1014d7d83353aed77532b16",
          "Name": "Point",
          "Description": "The point at the given arc length",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get a Point at a particular arc length along the curve\n\nCurve.PointAtSegmentLength (segmentLength: double = 0): Point"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 700,
      "MaximumValue": 1000,
      "MinimumValue": 350,
      "StepValue": 50,
      "Id": "36e166490df3464b99a6331c6f51b7c7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b43a00f7a1d1407490cff4d55592c1a6",
          "Name": "",
          "Description": "Int32",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "/@var[]..[],var[]..[]",
      "Id": "49e09e6dc1b84335ad5fc8bf467df764",
      "Inputs": [
        {
          "Id": "ecf4c20cc08247d983c6b691063a19fa",
          "Name": "x",
          "Description": "x value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "752843a2754648fe9c7358d9a2132bd2",
          "Name": "y",
          "Description": "y value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eade0e406071448f87b3ace394cd8c36",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides x by y.\n\n/ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "/@var[]..[],var[]..[]",
      "Id": "1819459f0cd34183be74038351854c42",
      "Inputs": [
        {
          "Id": "9875f1ef53ee4bca944b8f7669f8b5dc",
          "Name": "x",
          "Description": "x value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "66ff94875ba34383bbed7b01020a727c",
          "Name": "y",
          "Description": "y value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8979f5b6f3204db9a5b22bd4195eee94",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides x by y.\n\n/ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Ceiling@double",
      "Id": "6440955f005742fc934fe31ddce32080",
      "Inputs": [
        {
          "Id": "0b508a81a7044013aab9bf409be518b6",
          "Name": "number",
          "Description": "Number to round up.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bc00603ec45147009220faea27f340a4",
          "Name": "integer",
          "Description": "First integer greater than the number.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first integer greater than the number\n\nMath.Ceiling (number: double): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Ceiling@double",
      "Id": "4b95c6e62c124bf48ade87637f02c6f1",
      "Inputs": [
        {
          "Id": "0b5fbe55f34443be8497f86fb266f4ff",
          "Name": "number",
          "Description": "Number to round up.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "65fc7f5207c6434ba60f57224d336648",
          "Name": "integer",
          "Description": "First integer greater than the number.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first integer greater than the number\n\nMath.Ceiling (number: double): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "/@var[]..[],var[]..[]",
      "Id": "8f056d9ecf08417098cf1aaeb72661ae",
      "Inputs": [
        {
          "Id": "708a2d85fd984bbdbc3571b9d9f9d7ed",
          "Name": "x",
          "Description": "x value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ad2b0d061c3c457a9cc6263ea800e03f",
          "Name": "y",
          "Description": "y value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f824249af554464cb40cc709e7d0a291",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides x by y.\n\n/ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Sequence, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "72b488676dbd4f31ac2642cc2d13b5de",
      "Inputs": [
        {
          "Id": "31e86b423a5d4a83b75d1ec04dd5c367",
          "Name": "start",
          "Description": "Number or letter to start the sequence at\r\nDefault value: 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9d35904848bd4a2baa8db1fc0c0ded8b",
          "Name": "amount",
          "Description": "Amount of numbers in the sequence\r\nDefault value: 10",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2066b8b2578b4a238e1110e9a7f52d5f",
          "Name": "step",
          "Description": "Space between numbers or letters\r\nDefault value: 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d88e0ddf14384014922c1112967d14eb",
          "Name": "seq",
          "Description": "New sequence",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a sequence of numbers."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.X",
      "Id": "daa9d14e819f4566a13573bd3aaea604",
      "Inputs": [
        {
          "Id": "625e339da678401292b4cdaf0ea20c83",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f06418d213404fe08e40cfac37c7f9fa",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the X component of a Point\n\nPoint.X: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Y",
      "Id": "f88beaafd47d4948af930ced04def44a",
      "Inputs": [
        {
          "Id": "b8c1f2a7d59c44eab0f72e85e9e2c5de",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "da159ed36428462dbce228acad5fce9a",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Y component of a Point\n\nPoint.Y: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Z",
      "Id": "e69690de6fa447f8b47c86378ff6fa61",
      "Inputs": [
        {
          "Id": "4fe6c78f1d104da38d19d4d8803ddbc0",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "648003b05e2f41e2b771522d45c8d4c2",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Z component of a Point\n\nPoint.Z: double"
    },
    {
      "ConcreteType": "CoreNodeModels.Sequence, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "2c9f4c268eeb427594eb3ada8cdd3267",
      "Inputs": [
        {
          "Id": "9fc5e83dce394f04a04bd60fe5bbef24",
          "Name": "start",
          "Description": "Number or letter to start the sequence at\r\nDefault value: 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "60ccc7c24661470e9b7c68efa8df7acd",
          "Name": "amount",
          "Description": "Amount of numbers in the sequence\r\nDefault value: 10",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bbc20b0df2db4645952959c4aec92097",
          "Name": "step",
          "Description": "Space between numbers or letters\r\nDefault value: 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f25416b99ba8437da7223a21d0b44770",
          "Name": "seq",
          "Description": "New sequence",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a sequence of numbers."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double,double",
      "Id": "94fc97d97bc84b4087fcb30adf8bb7cf",
      "Inputs": [
        {
          "Id": "a802da71d9f64319aef4d81f29c91953",
          "Name": "x",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8bb683af479544f7a23aa369bd372f29",
          "Name": "y",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4c6617801551437fa69fc53750e52793",
          "Name": "z",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "33f3cf4931604fb7a798d443227337e2",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Form a Point given 3 cartesian coordinates\n\nPoint.ByCoordinates (x: double = 0, y: double = 0, z: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "/@var[]..[],var[]..[]",
      "Id": "62e870dd982a488380abf6e5c62fa0c4",
      "Inputs": [
        {
          "Id": "55732bbfab954019934ccac87d3d6942",
          "Name": "x",
          "Description": "x value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "09bfc98c8a1b4c759c716e796a7883d7",
          "Name": "y",
          "Description": "y value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d2b4224b976c43dbae2b0319d1bb5511",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides x by y.\n\n/ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.FamilyInstance.ByPoint@Revit.Elements.FamilyType,Autodesk.DesignScript.Geometry.Point",
      "Id": "49787469e04140d6aa68822e068d0447",
      "Inputs": [
        {
          "Id": "e82d6332b2484c6fb0d548d478539aa3",
          "Name": "familyType",
          "Description": "Family Type. Also called Family Symbol.\n\nFamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0e8bc84f4e7e4d7a9e8f0745ca89a1d1",
          "Name": "point",
          "Description": "Point in meters.\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ccde024aa82944e1bdd8b56e2ae710c1",
          "Name": "FamilyInstance",
          "Description": "FamilyInstance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Place a Revit FamilyInstance given the FamilyType (also known as the FamilySymbol in the Revit API) and its coordinates in world space\n\nFamilyInstance.ByPoint (familyType: FamilyType, point: Point): FamilyInstance"
    },
    {
      "ConcreteType": "DSRevitNodesUI.FamilyTypes, DSRevitNodesUI",
      "SelectedIndex": 3341,
      "SelectedString": "Wall Panel:Wall Panel",
      "NodeType": "ExtensionNode",
      "Id": "f25d77b5f16243a48d12471a5b553f22",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c44052aa36c6436d833b4d83d90e5a71",
          "Name": "Family Type",
          "Description": "The selected Family Type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All family types available in the document."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "dba440fa93664a89838a2c850ba2228c",
      "Inputs": [
        {
          "Id": "3ffcb520651a40fe87d21439f460545e",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4178f75327304335ad369a17a6e6c554",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4694e8cdea4a4b1ba5288c95c2a1e0b9",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4a8afd19ebf04db0b08deb89b0d830c2",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"b\";",
      "Id": "02cb15558487458a8ff494cb704ceac9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "62d6a2db52944346847598bf3c6bc29e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"d\";",
      "Id": "894c99a658234cfc9d7bdf9ccda3e51b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fc2bdfd3cd024f90bebf1f1fdd5c77c5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "3fd4469c4f2a4e5aaf41cd01ef75355d",
      "Inputs": [
        {
          "Id": "901521db6d274064ba9421a88257017c",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "74306a038c294e2cbebb8e38e82755c8",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4dfbddfb6c5e4cf88605e0462e606736",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f969ad1ac0a646bdad486930d5e07744",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "603c615165364a598f47c10a008f4450",
      "Inputs": [
        {
          "Id": "fb6030ff3aeb47728140e4ef7e41509f",
          "Name": "x",
          "Description": "x value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "270345f701d24bbca6000ef12728e8fd",
          "Name": "y",
          "Description": "y value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1c952df2140a4468b02343a0633413e4",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds x to y.\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "/@var[]..[],var[]..[]",
      "Id": "b1b2ba21d07e4656aa5509d4da2305a2",
      "Inputs": [
        {
          "Id": "65ce576caaa14c17bdecbf09cc2b25a4",
          "Name": "x",
          "Description": "x value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7f7070a9dfc5499db27e7a34b6cf47f4",
          "Name": "y",
          "Description": "y value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f4deb0ce97334d228276403b70248a82",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides x by y.\n\n/ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "c0b9af56734c482bad58968eba538659",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1e42067a314a43abb772253576452422",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"T2\";",
      "Id": "b78d3f151d234c19a5753895f74f8e4a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a05c6c7b387d4c7a8dd51a5cb1ac576d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"T3\";",
      "Id": "1b06c3a4f6a644b7a13ee04d7f6c415e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "441eefa04ff34f5cb643b6a2d9c5adbe",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"T4\";",
      "Id": "b4d2bd5296bc42d1b9d4dba5727fbbb5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b807a3fc8def41bbab61522f63d6a424",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "0aedd705246e404ba87a03dd2565dec6",
      "Inputs": [
        {
          "Id": "156f4f3f457e44cbb1c39340093e70ca",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "89d7f9f6cdad468a8377d1ae76f4f076",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a584949c1034700bcb59cea7bd520b4",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "08e9f256143c4bf6a0b99f2a88a88d0f",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "df19aa7d69a648d38e3bd0459de63e16",
      "Inputs": [
        {
          "Id": "9203024560d04083a1e73693ee83d9bf",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "433be6118fb74ca18c5fc1afd7049c6b",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "805b340eb4e74f31b065a03121b918fd",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8db9cccf237d4165a965a2601d9431f3",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "753dda95e7f9440c8bae1da4cf38e1ec",
      "Inputs": [
        {
          "Id": "edf7db6fba1d4ad7a56655d137d2366e",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4c4826a0aa654ae2aaaf22a21478eb86",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8121097cb5144923ac0dc4ce03faf931",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "88b267120b494e548fdd404e5b3f4c3d",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.RandomList@int",
      "Id": "b0aee93a1e674e5d966e404b75ea8b73",
      "Inputs": [
        {
          "Id": "91fce8bd583a4791a24f9da83f4cce47",
          "Name": "amount",
          "Description": "Amount of random numbers the result list will contain.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6a1b63cc59da4447ad8c6d388c597d8a",
          "Name": "number",
          "Description": "List of random numbers between 0 and 1.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a list containing the given amount of random doubles in the range of [0, 1).\n\nMath.RandomList (amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "5723787d57b14fc697178b9548a6a75c",
      "Inputs": [
        {
          "Id": "fc61a92ae53b4e2ea3e105c29263b07e",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "beb805c1ace041258d1c807dbaa519df",
          "Name": "count",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 300,
      "MaximumValue": 1000,
      "MinimumValue": 150,
      "StepValue": 150,
      "Id": "191bbb61fde84c40a6cf4b70dafe7e39",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a1365ff6a60c4548b7c27c1767d18398",
          "Name": "",
          "Description": "Int32",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "*@var[]..[],var[]..[]",
      "Id": "83fac4dddf95429d9c4412eb1fb4762a",
      "Inputs": [
        {
          "Id": "3e3c21ae2a8a486da5d91407c4db49ee",
          "Name": "x",
          "Description": "x value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c1cadc982c904f4c825f1281dfdc166c",
          "Name": "y",
          "Description": "y value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "08ab84684c58480785fa30faadd4b577",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Multiplies x by y.\n\n* (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "a879a774508f471ab411fe195d045c58",
      "Inputs": [
        {
          "Id": "fa3abba1c7e44bb1b5004a99dbc7fc55",
          "Name": "x",
          "Description": "x value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0d38bf5ecb88487f9cbd30d04d7c2a81",
          "Name": "y",
          "Description": "y value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d04318d98ea2464d9abf30d67570e9cb",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds x to y.\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "5d5fe76a218243079122ea0953e74898",
      "Inputs": [
        {
          "Id": "9899c962f04048a39f45e2e6ff54d66d",
          "Name": "x",
          "Description": "x value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9f4049cbf71c47e48919f581bd523d9e",
          "Name": "y",
          "Description": "y value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5cc03256cf9d404295a8ff2f2334a039",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds x to y.\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "a8dc13f00c8649c985bcc14a07a52278",
      "Inputs": [
        {
          "Id": "96441b8259b14b12a1981c03664a8ae2",
          "Name": "x",
          "Description": "x value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9a6dbee62e2e40d7bc9efb2c35bd32fb",
          "Name": "y",
          "Description": "y value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ee05e646d3a6409a9c6d9eac619211f3",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds x to y.\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 70,
      "MaximumValue": 100,
      "MinimumValue": 20,
      "StepValue": 5,
      "Id": "eb08eef2163b4749b90d762f5e0fed32",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3b7816c8cb504d3fb0b3975b0c3e8640",
          "Name": "",
          "Description": "Int32",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "/@var[]..[],var[]..[]",
      "Id": "2800cae3be3c46e6a6c8373a38aa65c1",
      "Inputs": [
        {
          "Id": "9fbc5426efea440a8d8fccfc8596910e",
          "Name": "x",
          "Description": "x value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "27118e22e47f4f6083d032c433932686",
          "Name": "y",
          "Description": "y value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "efebd15f024647cba60d32e91951207f",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides x by y.\n\n/ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "/@var[]..[],var[]..[]",
      "Id": "ad1be18b3e7e41a79cf6dc041502eec0",
      "Inputs": [
        {
          "Id": "3fc96d98456d4f15b8ed76ed74b92894",
          "Name": "x",
          "Description": "x value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe0e038deb97408dbba5d25a639c5818",
          "Name": "y",
          "Description": "y value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "460211c2843a4f35b1d8d2afba64cd47",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides x by y.\n\n/ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3;",
      "Id": "3d7caca3a8004313aa40cfc415a51bf2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4054f88546e842748c8805c62203ce5e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3/2;",
      "Id": "04f09dd4f8be437590f97a07ec7801ed",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "caa151d2c1cd492282200105060bcc23",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "47771a99ee6f40eda62d46167b2b3053",
      "Inputs": [
        {
          "Id": "e9c2ff06c3a44c4eb19de5f95b0fb66a",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f9dcaeefe3d646d883ee8e6dc6f02d94",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fff6da9bf5f8445b86c036648c6de09d",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Ceiling@double",
      "Id": "b263ba181b3240cb9006b5f96584ac85",
      "Inputs": [
        {
          "Id": "ce4cd5d888fb45caaa5d350e7e024e0f",
          "Name": "number",
          "Description": "Number to round up.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6f1e7513b294f67972425c96f32bd6b",
          "Name": "integer",
          "Description": "First integer greater than the number.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first integer greater than the number\n\nMath.Ceiling (number: double): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "*@var[]..[],var[]..[]",
      "Id": "15e3cad07dbf4e03b569ef26bde355e9",
      "Inputs": [
        {
          "Id": "a9fb1665502841a39556551b0f089931",
          "Name": "x",
          "Description": "x value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "30db8cc9edfb4e49a830df8d9a7323a5",
          "Name": "y",
          "Description": "y value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "997062aee6744948afc27f2e6bdb2156",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Multiplies x by y.\n\n* (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "10;",
      "Id": "2dc14ace88af4e53abc5e258b07b3a16",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0b130854dafe48c9832e5e086b65a703",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "/@var[]..[],var[]..[]",
      "Id": "afa8f98887704392a87295ca7fb08bcc",
      "Inputs": [
        {
          "Id": "80db0e77d96f4bdc8c6e905f97484044",
          "Name": "x",
          "Description": "x value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2c2e032f490e4916b33681a461ba560b",
          "Name": "y",
          "Description": "y value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9bffeefa49ec448dafc7511ab61550bb",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides x by y.\n\n/ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.ColorRange, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "b3f97d31ac154c50b68cd0158afe9b71",
      "Inputs": [
        {
          "Id": "3b067a1b76b44d64947ac7ac2e2f4452",
          "Name": "colors",
          "Description": "A list of colors to include in the range.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "076bc4873c604319b4dff96ecfa3761e",
          "Name": "indices",
          "Description": "A list of values between 0.0 and 1.0 which position the input colors along the range.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6b882d60e0a7431fa6b984b520bc890c",
          "Name": "value",
          "Description": "A list of values between 0.0 and 1.0. These values are used to look up the color within the range.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bf77a9e412d24d659d95c5d7f4e6936d",
          "Name": "color",
          "Description": "The selected colors.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get a color given a color range."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
      "InputValue": {
        "R": 255,
        "G": 215,
        "B": 0,
        "A": 255
      },
      "NodeType": "ColorInputNode",
      "Id": "7ef75388ccc3486c9e764f373b0b6e97",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c7ff3e4b8f194a54944cfb29ab912491",
          "Name": "Color",
          "Description": "Selected Color.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a Color from the palette"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
      "InputValue": {
        "R": 105,
        "G": 105,
        "B": 105,
        "A": 255
      },
      "NodeType": "ColorInputNode",
      "Id": "8e948bc9c5244c4badd8e800916a94bb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a8b68ef8c2a540f2954522da137ba42a",
          "Name": "Color",
          "Description": "Selected Color.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a Color from the palette"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[x,y];",
      "Id": "d2926b28c2994482a82d6c85d42b993d",
      "Inputs": [
        {
          "Id": "5adf0b36179648efad0a9b6cb9b8fa4f",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3d173ebd3082488197af4837488ba69b",
          "Name": "y",
          "Description": "y",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4b10ae9beb1a4051a8e9a71bf1035937",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[0,1];",
      "Id": "10af42e9d9e34472a7de990f4e152533",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "465796dbd7ed4324af024f36aad0806a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.OverrideColorInView@DSCore.Color",
      "Id": "da63f8506884491baf86bc52155ea36b",
      "Inputs": [
        {
          "Id": "a07720a6d4e5461895693d7b74d5d9b1",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6c7d93fbb8ee4b34a5d56e4591365d21",
          "Name": "color",
          "Description": "The color to apply to a solid fill on the element.\n\nColor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3cbdbbe2e6d84a4fbc218fc74cbe4d07",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Override the element's color in the active view.\n\nElement.OverrideColorInView (color: Color): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3/2;",
      "Id": "d9b632aecd064c36afca6698b9461b60",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e3c6ee6b1eb94bc1b13bfb15274438ac",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "/@var[]..[],var[]..[]",
      "Id": "092064a49b9744769cde55febba5674c",
      "Inputs": [
        {
          "Id": "8e24b58d6f844341904284bbcbd62563",
          "Name": "x",
          "Description": "x value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f48fd6f483f6418387b900d815202f4f",
          "Name": "y",
          "Description": "y value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dd32f17acaf74067b1637207c21935e6",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides x by y.\n\n/ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3;",
      "Id": "59b00b4844c744fc922db389820ce7c8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b2136c31a8014fe58bf2ffa56133aef2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "/@var[]..[],var[]..[]",
      "Id": "1cda8a2d940342c2bb965c9250ec6e03",
      "Inputs": [
        {
          "Id": "3527f80c46c24fe9942999a53dc039a3",
          "Name": "x",
          "Description": "x value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b6f8b69c580c483ea10cead1bc8cc981",
          "Name": "y",
          "Description": "y value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5aa8211792da4d689e2dd84499aa6315",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides x by y.\n\n/ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"T2\";",
      "Id": "2598fc6e047743218e62b40c20c5c372",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "be36135603d34289868a8fecbde20468",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"T3\";",
      "Id": "a332e64cd7184083ad31de31e665cc1b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2b88d366fdbc47fead3ef558944dae21",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"T4\";",
      "Id": "e6fe0f338efe462f9ecebd24d5d82298",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0a6ddbdf919641039acc38ed949d9dc2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "62ea52378db7479aa60760a99e56c721",
      "Inputs": [
        {
          "Id": "b1e672e28c544c0da84e7d5b9f39056f",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ebe45625f6564fff8d3c344c92d18eac",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "926ac1e6b6894a95b9d72b463403bb27",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b0f9a930856b4b20a94956700d2b83ca",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "d5f124ac70fa41a9bab55029900d4d35",
      "Inputs": [
        {
          "Id": "ef09abe1691b4d59aa2bf25c25713642",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7b33fec6f4e4b0abcf5581f74663aee",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fb7653bd20d5439ca121622131541b95",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6b86bc469cda4b41952a6507af138658",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "8573ad624e07413aabfb4d480ab3e4ca",
      "Inputs": [
        {
          "Id": "3816da35253d4c4e9e38bff04fb1b208",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "66674bb68b4d427ba410e1c33cd9a1db",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dcc15dea96f24fbe9252161c10b1a1a5",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e158f3c79d814bf0a2142075d231d30f",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonStringNode, PythonNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "95f9482a59eb4594835a59b26e8ba032",
      "Inputs": [
        {
          "Id": "7a09fe2dc7a645fb93c142039780be8e",
          "Name": "script",
          "Description": "Python script to run.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6488c85c8a164e53b32f4214cf2aedd7",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2a8cc1650e1241e9b3c008d7a5e10d17",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs a IronPython script from a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"OUT = [[15*j for j in range(len(i))] for i in IN[0]]\";",
      "Id": "4a319c556eaf4943bdcd41b8dc50665b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "15ce416588454a658caf7da6ea9090da",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x*2;",
      "Id": "06555fba4d8245cfa222059997831872",
      "Inputs": [
        {
          "Id": "97063d4c279e4d2ba8cfff8d741d8931",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a3e03f84b5d24ddfb918cd0ddc54b179",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x*3;",
      "Id": "25ef94ad156541eca588f18e804d7f38",
      "Inputs": [
        {
          "Id": "80dc8ec6c7c34068a0a7a0bfc910bec0",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b307ad37df0248d1a003d3c579eacf96",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.OverrideColorInView@DSCore.Color",
      "Id": "78c82aef2f7544419f608452601e0292",
      "Inputs": [
        {
          "Id": "eaf0208f91154a6ba90557eac5b6d5fb",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "086c72a254be45c990c990a5b22e93d9",
          "Name": "color",
          "Description": "The color to apply to a solid fill on the element.\n\nColor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "814770239fad464f8613142d5793e77c",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Override the element's color in the active view.\n\nElement.OverrideColorInView (color: Color): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[0,1];",
      "Id": "5a3f43d646dc4cf38a9117a01a90acba",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "82e7e69564474bc3a6cfbcb0162f6d4b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[x,y];",
      "Id": "4b01ca2cf3df401680a103e9b00926fb",
      "Inputs": [
        {
          "Id": "45a10d7a54c34a529cc9e3a8a270577a",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4a9c11d8e85f427ebdee789637a1a4eb",
          "Name": "y",
          "Description": "y",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "24698f3b97e34e67af8206b05d3d54d2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
      "InputValue": {
        "R": 105,
        "G": 105,
        "B": 105,
        "A": 255
      },
      "NodeType": "ColorInputNode",
      "Id": "101e7086d71b45628e64680c141c19e8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b1dffe24570245ee9fb7ac6d8eaa259f",
          "Name": "Color",
          "Description": "Selected Color.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a Color from the palette"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
      "InputValue": {
        "R": 255,
        "G": 215,
        "B": 0,
        "A": 255
      },
      "NodeType": "ColorInputNode",
      "Id": "2c9c786ad4fc4b50824524faa21beb37",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "959b1a47cd3b4a2e819a3f9c5c78afc7",
          "Name": "Color",
          "Description": "Selected Color.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a Color from the palette"
    },
    {
      "ConcreteType": "CoreNodeModels.ColorRange, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "480b547f4a014d1a81cc0b118db58f56",
      "Inputs": [
        {
          "Id": "d462302f18be4d01b3d118a4b4d30145",
          "Name": "colors",
          "Description": "A list of colors to include in the range.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0addd5ce94e1416fbb16e1de85ecf2f6",
          "Name": "indices",
          "Description": "A list of values between 0.0 and 1.0 which position the input colors along the range.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7e91fc813eea4e138ae0dc343d5cd328",
          "Name": "value",
          "Description": "A list of values between 0.0 and 1.0. These values are used to look up the color within the range.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5b301069cf5840738441b76037c4746b",
          "Name": "color",
          "Description": "The selected colors.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get a color given a color range."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "15c8dec75bff47a5946d3979ec9f2603",
      "Inputs": [
        {
          "Id": "eb9cfdd50416419db10b56500c8a5761",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ebf871103ef140edb55575606a3b40f4",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fbdb0a3aaa76401ea842f108d93ebdb8",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.MaximumItem@var[]",
      "Id": "ce8e81ac6db54aa1bb4624979b863816",
      "Inputs": [
        {
          "Id": "6f38b9c27f7a4026ab7670ae58de2ceb",
          "Name": "list",
          "Description": "List to take the maximum value from.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2d708ca724ba4a2886cfec72f9e1dc37",
          "Name": "max",
          "Description": "Maximum value from the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the maximum value from a list.\n\nList.MaximumItem (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "/@var[]..[],var[]..[]",
      "Id": "2bed0552a69c49a3bb2696afb25b98c0",
      "Inputs": [
        {
          "Id": "0462873140eb403bae97bf9fcc44e066",
          "Name": "x",
          "Description": "x value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bd0b3ce3ead24792b052aaab620cd2f6",
          "Name": "y",
          "Description": "y value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "23aeb3b46ce644f0816865678c47286c",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides x by y.\n\n/ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonStringNode, PythonNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "e55d99cc4b0d4bd79d044b6d18b11203",
      "Inputs": [
        {
          "Id": "ec3070c046664acab4dcd340712b6a8b",
          "Name": "script",
          "Description": "Python script to run.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fc53964fc91a4584bff20174681296f6",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "815ff558a4c44e0bbab973849155b66a",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs a IronPython script from a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"OUT = [[1-j for j in i] for i in IN[0]]\";",
      "Id": "a512075472a34d098939a24c1fb1e77f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "105c51ac66d6434fa296e9ba2663fbd1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nif IN[1] == 1:\r\n\tOUT = [IN[0], []]\r\nelif IN[1] == 2:\r\n\tOUT = [[], IN[0]] ",
      "VariableInputPorts": true,
      "Id": "4dab3ca6968a47d99c3b58f0a67b208a",
      "Inputs": [
        {
          "Id": "4ea340001d4c4b8a88c12f4e5a74fded",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d88c91dc7b9e4d7b9d1edca1c71f4c69",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2b0dc37cf8e7416b8433073c4f6bbbd3",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[0];",
      "Id": "1c3f15101a3b40f98969c6b7d532c9d6",
      "Inputs": [
        {
          "Id": "f9d13d8669cd434e9c5510e5186aed7e",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b7920c29664491db427f952a7efe7a6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[1];",
      "Id": "819c7288a39a47d78d3e502a877d20f2",
      "Inputs": [
        {
          "Id": "2b9dbab0944a4c87814376cda88c6a81",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de5339e8d0bb4262a8cd0dc5c41e5fd1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 1,
      "MaximumValue": 2,
      "MinimumValue": 1,
      "StepValue": 1,
      "Id": "d50e6aa044684d86a949f9caec03a71a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e8c13b1471584624aacfc051373d6065",
          "Name": "",
          "Description": "Int32",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    }
  ],
  "Connectors": [
    {
      "Start": "ba491645c7584f349e2a95b1d5b42fdf",
      "End": "a1d4898e644f40f3a4954b9c0723a223",
      "Id": "4f58c270591043dd9a1a5bd7f903bd72"
    },
    {
      "Start": "ba491645c7584f349e2a95b1d5b42fdf",
      "End": "f6ed637dc57147e28e942ceb8c7f4b1d",
      "Id": "923accc08e934e01b2e02e2a20cdb39e"
    },
    {
      "Start": "03014656112a4496b28f74c9bf378c20",
      "End": "290c37e871694bccb340cbaefaf5d5c7",
      "Id": "6c74e8da7c6c4ffebb9e9f58477253d1"
    },
    {
      "Start": "655b6d7140e94928a9a5d44dff61e1cf",
      "End": "9875f1ef53ee4bca944b8f7669f8b5dc",
      "Id": "3a349ecbf7de457abb0a1795265d1d28"
    },
    {
      "Start": "655b6d7140e94928a9a5d44dff61e1cf",
      "End": "55732bbfab954019934ccac87d3d6942",
      "Id": "9f814695a8f747438be14cb56d1fc3bc"
    },
    {
      "Start": "d1d96fb27c9b4d918f3291a122779a2e",
      "End": "ecf4c20cc08247d983c6b691063a19fa",
      "Id": "6bf3e7f8f7114ae7b1a713114fd32b04"
    },
    {
      "Start": "d1d96fb27c9b4d918f3291a122779a2e",
      "End": "708a2d85fd984bbdbc3571b9d9f9d7ed",
      "Id": "f8da83a67ff344b787bb7af58a4f8a12"
    },
    {
      "Start": "7fd0382ed1014d7d83353aed77532b16",
      "End": "625e339da678401292b4cdaf0ea20c83",
      "Id": "271fdf2babec4abc86f8f633da4f1a10"
    },
    {
      "Start": "7fd0382ed1014d7d83353aed77532b16",
      "End": "b8c1f2a7d59c44eab0f72e85e9e2c5de",
      "Id": "caed8f513bb94e1896e46b6416365846"
    },
    {
      "Start": "7fd0382ed1014d7d83353aed77532b16",
      "End": "4fe6c78f1d104da38d19d4d8803ddbc0",
      "Id": "e54154eeaacb444db418cdb286ed066c"
    },
    {
      "Start": "b43a00f7a1d1407490cff4d55592c1a6",
      "End": "752843a2754648fe9c7358d9a2132bd2",
      "Id": "2c22c7f4ca4c4eaaa8d95bfada32b7f7"
    },
    {
      "Start": "b43a00f7a1d1407490cff4d55592c1a6",
      "End": "66ff94875ba34383bbed7b01020a727c",
      "Id": "fd05764bb6304b0aa97a53d8d903451c"
    },
    {
      "Start": "eade0e406071448f87b3ace394cd8c36",
      "End": "0b508a81a7044013aab9bf409be518b6",
      "Id": "58912b1885d444a49ea7ba79688ff627"
    },
    {
      "Start": "8979f5b6f3204db9a5b22bd4195eee94",
      "End": "0b5fbe55f34443be8497f86fb266f4ff",
      "Id": "82f33694636b4b9d897d23682e96915f"
    },
    {
      "Start": "bc00603ec45147009220faea27f340a4",
      "End": "ad2b0d061c3c457a9cc6263ea800e03f",
      "Id": "bfd85e38ebb54b4a88a034fe87a4a2f4"
    },
    {
      "Start": "bc00603ec45147009220faea27f340a4",
      "End": "9d35904848bd4a2baa8db1fc0c0ded8b",
      "Id": "584e213eca684cfb9bc4b67bb0292361"
    },
    {
      "Start": "65fc7f5207c6434ba60f57224d336648",
      "End": "60ccc7c24661470e9b7c68efa8df7acd",
      "Id": "8559d86573164a519d9de1f1cd46412e"
    },
    {
      "Start": "65fc7f5207c6434ba60f57224d336648",
      "End": "09bfc98c8a1b4c759c716e796a7883d7",
      "Id": "e12c9542f79d4fd1a354f17f03b94f4c"
    },
    {
      "Start": "f824249af554464cb40cc709e7d0a291",
      "End": "2066b8b2578b4a238e1110e9a7f52d5f",
      "Id": "b0c99d5538b84ac2ab718a3da9116d36"
    },
    {
      "Start": "f824249af554464cb40cc709e7d0a291",
      "End": "4dfbddfb6c5e4cf88605e0462e606736",
      "Id": "39a00f99f7c84a36b04be8fbc9331aca"
    },
    {
      "Start": "d88e0ddf14384014922c1112967d14eb",
      "End": "4c6617801551437fa69fc53750e52793",
      "Id": "a70716daeddf43cfb76172c734e8229f"
    },
    {
      "Start": "f06418d213404fe08e40cfac37c7f9fa",
      "End": "fb6030ff3aeb47728140e4ef7e41509f",
      "Id": "85421eba277a49db8b40fa68facb9e1f"
    },
    {
      "Start": "da159ed36428462dbce228acad5fce9a",
      "End": "8bb683af479544f7a23aa369bd372f29",
      "Id": "abd14a1957564a4282a4ae21bc0e8a68"
    },
    {
      "Start": "648003b05e2f41e2b771522d45c8d4c2",
      "End": "31e86b423a5d4a83b75d1ec04dd5c367",
      "Id": "bebb83760e914806966bf2dfb944fe8f"
    },
    {
      "Start": "f25416b99ba8437da7223a21d0b44770",
      "End": "a802da71d9f64319aef4d81f29c91953",
      "Id": "d0046de1bb6046ddb6cd8c0d2e5070e1"
    },
    {
      "Start": "33f3cf4931604fb7a798d443227337e2",
      "End": "0e8bc84f4e7e4d7a9e8f0745ca89a1d1",
      "Id": "3f24989166b04ae695889647644e18e6"
    },
    {
      "Start": "d2b4224b976c43dbae2b0319d1bb5511",
      "End": "bbc20b0df2db4645952959c4aec92097",
      "Id": "53be6bf73d69465cad25d86a58b0c84c"
    },
    {
      "Start": "d2b4224b976c43dbae2b0319d1bb5511",
      "End": "4694e8cdea4a4b1ba5288c95c2a1e0b9",
      "Id": "5c916296f2bd4f45aa0438e4c59555f5"
    },
    {
      "Start": "d2b4224b976c43dbae2b0319d1bb5511",
      "End": "65ce576caaa14c17bdecbf09cc2b25a4",
      "Id": "4ffefda64f8a4a39b3da40ee4b9a4ee8"
    },
    {
      "Start": "ccde024aa82944e1bdd8b56e2ae710c1",
      "End": "3ffcb520651a40fe87d21439f460545e",
      "Id": "bff4509cfed44bf8a8f6df1f9e7b1581"
    },
    {
      "Start": "ccde024aa82944e1bdd8b56e2ae710c1",
      "End": "901521db6d274064ba9421a88257017c",
      "Id": "35f4c3e30a674411b5695df9024a24cf"
    },
    {
      "Start": "ccde024aa82944e1bdd8b56e2ae710c1",
      "End": "6488c85c8a164e53b32f4214cf2aedd7",
      "Id": "ba1630d8146f43a5becea8b87de182f9"
    },
    {
      "Start": "ccde024aa82944e1bdd8b56e2ae710c1",
      "End": "4ea340001d4c4b8a88c12f4e5a74fded",
      "Id": "07d61f57bcc843faae3403012d03371f"
    },
    {
      "Start": "c44052aa36c6436d833b4d83d90e5a71",
      "End": "e82d6332b2484c6fb0d548d478539aa3",
      "Id": "af4386725d9f43ed8991d1d246a98504"
    },
    {
      "Start": "62d6a2db52944346847598bf3c6bc29e",
      "End": "4178f75327304335ad369a17a6e6c554",
      "Id": "2f7114bec7764b9a8e7c548222a6e11a"
    },
    {
      "Start": "fc2bdfd3cd024f90bebf1f1fdd5c77c5",
      "End": "74306a038c294e2cbebb8e38e82755c8",
      "Id": "27a54ac181f34111af4a81e3725379b9"
    },
    {
      "Start": "1c952df2140a4468b02343a0633413e4",
      "End": "9fc5e83dce394f04a04bd60fe5bbef24",
      "Id": "a40814d695014ad2bde924c50f992a4d"
    },
    {
      "Start": "f4deb0ce97334d228276403b70248a82",
      "End": "270345f701d24bbca6000ef12728e8fd",
      "Id": "aba7a25f0c7f404596d5740e8ef130ee"
    },
    {
      "Start": "1e42067a314a43abb772253576452422",
      "End": "7f7070a9dfc5499db27e7a34b6cf47f4",
      "Id": "2a48c3fb663a4a52b730d8cec247b6cb"
    },
    {
      "Start": "a05c6c7b387d4c7a8dd51a5cb1ac576d",
      "End": "89d7f9f6cdad468a8377d1ae76f4f076",
      "Id": "c76d215c5a744144a54769119150ef64"
    },
    {
      "Start": "441eefa04ff34f5cb643b6a2d9c5adbe",
      "End": "433be6118fb74ca18c5fc1afd7049c6b",
      "Id": "6200cc01b45146429a72ed2d5089aa69"
    },
    {
      "Start": "b807a3fc8def41bbab61522f63d6a424",
      "End": "4c4826a0aa654ae2aaaf22a21478eb86",
      "Id": "c6d1d25958bf43e5b598bb19f5f10eb0"
    },
    {
      "Start": "6a1b63cc59da4447ad8c6d388c597d8a",
      "End": "a9fb1665502841a39556551b0f089931",
      "Id": "563038bbc1ff47be9d2f70f8bd5372a2"
    },
    {
      "Start": "beb805c1ace041258d1c807dbaa519df",
      "End": "91fce8bd583a4791a24f9da83f4cce47",
      "Id": "44206ac3ed104866a479ba3891ae8af2"
    },
    {
      "Start": "a1365ff6a60c4548b7c27c1767d18398",
      "End": "c1cadc982c904f4c825f1281dfdc166c",
      "Id": "c3ad797c046248edb7a0963202d3c99b"
    },
    {
      "Start": "08ab84684c58480785fa30faadd4b577",
      "End": "9f4049cbf71c47e48919f581bd523d9e",
      "Id": "1e5d5114ef8647639c351e50368e22b9"
    },
    {
      "Start": "08ab84684c58480785fa30faadd4b577",
      "End": "9fbc5426efea440a8d8fccfc8596910e",
      "Id": "8196df0cafac4084a00643b865854099"
    },
    {
      "Start": "08ab84684c58480785fa30faadd4b577",
      "End": "3fc96d98456d4f15b8ed76ed74b92894",
      "Id": "30e925e5ea8b494eb6f448d6c40abb12"
    },
    {
      "Start": "d04318d98ea2464d9abf30d67570e9cb",
      "End": "1a584949c1034700bcb59cea7bd520b4",
      "Id": "9905d1da8c0749d5b2253e0678f7acf9"
    },
    {
      "Start": "5cc03256cf9d404295a8ff2f2334a039",
      "End": "8121097cb5144923ac0dc4ce03faf931",
      "Id": "0181b0fc1c8643e98a0e16907473aea3"
    },
    {
      "Start": "ee05e646d3a6409a9c6d9eac619211f3",
      "End": "805b340eb4e74f31b065a03121b918fd",
      "Id": "2aaf3f4867f844e2aafc3a0789ad6ee6"
    },
    {
      "Start": "3b7816c8cb504d3fb0b3975b0c3e8640",
      "End": "9899c962f04048a39f45e2e6ff54d66d",
      "Id": "c0b59f1e69f940518fa7abab5c32ac69"
    },
    {
      "Start": "3b7816c8cb504d3fb0b3975b0c3e8640",
      "End": "3527f80c46c24fe9942999a53dc039a3",
      "Id": "42496c270ba84c4bb867f3daadb38b5d"
    },
    {
      "Start": "3b7816c8cb504d3fb0b3975b0c3e8640",
      "End": "8e24b58d6f844341904284bbcbd62563",
      "Id": "b609437a824b464286eb0f5ce6af48c8"
    },
    {
      "Start": "efebd15f024647cba60d32e91951207f",
      "End": "0d38bf5ecb88487f9cbd30d04d7c2a81",
      "Id": "2a4f468bb63e4052a2e342522c5af09c"
    },
    {
      "Start": "460211c2843a4f35b1d8d2afba64cd47",
      "End": "9a6dbee62e2e40d7bc9efb2c35bd32fb",
      "Id": "ab2f7b91f71e4f57a7aebd1115c5efd8"
    },
    {
      "Start": "4054f88546e842748c8805c62203ce5e",
      "End": "27118e22e47f4f6083d032c433932686",
      "Id": "aae59ca6b9e846acabd889d7bd78d50e"
    },
    {
      "Start": "caa151d2c1cd492282200105060bcc23",
      "End": "fe0e038deb97408dbba5d25a639c5818",
      "Id": "4d21c0f251d9432fa32e121c1146ebff"
    },
    {
      "Start": "fff6da9bf5f8445b86c036648c6de09d",
      "End": "fc61a92ae53b4e2ea3e105c29263b07e",
      "Id": "2a686630b6784cb1b0f184b4076adf6b"
    },
    {
      "Start": "fff6da9bf5f8445b86c036648c6de09d",
      "End": "156f4f3f457e44cbb1c39340093e70ca",
      "Id": "33e4e57ae86b40adbfc426998d00c184"
    },
    {
      "Start": "fff6da9bf5f8445b86c036648c6de09d",
      "End": "9203024560d04083a1e73693ee83d9bf",
      "Id": "c5f586f8552843138a1cb176669a3c1a"
    },
    {
      "Start": "fff6da9bf5f8445b86c036648c6de09d",
      "End": "edf7db6fba1d4ad7a56655d137d2366e",
      "Id": "ae9a17c63e30418ba08c4b7aba69892d"
    },
    {
      "Start": "fff6da9bf5f8445b86c036648c6de09d",
      "End": "a07720a6d4e5461895693d7b74d5d9b1",
      "Id": "6aae17fa05c14083904f8d2c7196e7b9"
    },
    {
      "Start": "a6f1e7513b294f67972425c96f32bd6b",
      "End": "80db0e77d96f4bdc8c6e905f97484044",
      "Id": "97c4862731534c078940ba0c3bee2a40"
    },
    {
      "Start": "997062aee6744948afc27f2e6bdb2156",
      "End": "ce4cd5d888fb45caaa5d350e7e024e0f",
      "Id": "c5df688389fe498b8883daea8e7b22ef"
    },
    {
      "Start": "0b130854dafe48c9832e5e086b65a703",
      "End": "30db8cc9edfb4e49a830df8d9a7323a5",
      "Id": "64b58333bf8f425a9ad7ebff1585df07"
    },
    {
      "Start": "0b130854dafe48c9832e5e086b65a703",
      "End": "2c2e032f490e4916b33681a461ba560b",
      "Id": "149eaed632d6493aa56252bb330df08c"
    },
    {
      "Start": "9bffeefa49ec448dafc7511ab61550bb",
      "End": "3e3c21ae2a8a486da5d91407c4db49ee",
      "Id": "ce4b39ecfede465eb12d24c2489d564b"
    },
    {
      "Start": "9bffeefa49ec448dafc7511ab61550bb",
      "End": "6b882d60e0a7431fa6b984b520bc890c",
      "Id": "71950aa7a9a64b7e960f7b2210268482"
    },
    {
      "Start": "bf77a9e412d24d659d95c5d7f4e6936d",
      "End": "6c7d93fbb8ee4b34a5d56e4591365d21",
      "Id": "765ab38c6d7e4d1da06079d7653ea7d8"
    },
    {
      "Start": "c7ff3e4b8f194a54944cfb29ab912491",
      "End": "5adf0b36179648efad0a9b6cb9b8fa4f",
      "Id": "8ea2c2f234fe48c49b0675beaa45ce47"
    },
    {
      "Start": "a8b68ef8c2a540f2954522da137ba42a",
      "End": "3d173ebd3082488197af4837488ba69b",
      "Id": "cf837e968e6c41ddb4f2520a6465bb29"
    },
    {
      "Start": "4b10ae9beb1a4051a8e9a71bf1035937",
      "End": "3b067a1b76b44d64947ac7ac2e2f4452",
      "Id": "65012b79cf4b47689074f28c0a82da5b"
    },
    {
      "Start": "465796dbd7ed4324af024f36aad0806a",
      "End": "076bc4873c604319b4dff96ecfa3761e",
      "Id": "13890f9b5fa44517ac19ef0b54ac22bf"
    },
    {
      "Start": "e3c6ee6b1eb94bc1b13bfb15274438ac",
      "End": "f48fd6f483f6418387b900d815202f4f",
      "Id": "74b17817eedc4f5d9bb87482cf9c7e67"
    },
    {
      "Start": "dd32f17acaf74067b1637207c21935e6",
      "End": "96441b8259b14b12a1981c03664a8ae2",
      "Id": "8fbd5c74ae1641c58148a2630385a48b"
    },
    {
      "Start": "b2136c31a8014fe58bf2ffa56133aef2",
      "End": "b6f8b69c580c483ea10cead1bc8cc981",
      "Id": "410879cdd83943cd97b769662bfede71"
    },
    {
      "Start": "5aa8211792da4d689e2dd84499aa6315",
      "End": "fa3abba1c7e44bb1b5004a99dbc7fc55",
      "Id": "b2dd9ed9a33c4974b1173425bc45727e"
    },
    {
      "Start": "be36135603d34289868a8fecbde20468",
      "End": "66674bb68b4d427ba410e1c33cd9a1db",
      "Id": "137499503ecb48009dc882a668421ae1"
    },
    {
      "Start": "2b88d366fdbc47fead3ef558944dae21",
      "End": "d7b33fec6f4e4b0abcf5581f74663aee",
      "Id": "78e1a9197ec1471f9b2c9db4a8bfe001"
    },
    {
      "Start": "0a6ddbdf919641039acc38ed949d9dc2",
      "End": "ebe45625f6564fff8d3c344c92d18eac",
      "Id": "0d570abc90d94b50b53e9d700a4a429f"
    },
    {
      "Start": "2a8cc1650e1241e9b3c008d7a5e10d17",
      "End": "dcc15dea96f24fbe9252161c10b1a1a5",
      "Id": "6ede2da9b2f240569381cfc9f0a5f0cf"
    },
    {
      "Start": "2a8cc1650e1241e9b3c008d7a5e10d17",
      "End": "97063d4c279e4d2ba8cfff8d741d8931",
      "Id": "e3e198e3dc0c4280b7950f84766d7a4a"
    },
    {
      "Start": "2a8cc1650e1241e9b3c008d7a5e10d17",
      "End": "80dc8ec6c7c34068a0a7a0bfc910bec0",
      "Id": "91570aea03a14d35a3007cca1bf20f8f"
    },
    {
      "Start": "2a8cc1650e1241e9b3c008d7a5e10d17",
      "End": "eb9cfdd50416419db10b56500c8a5761",
      "Id": "09cd041761e74382b744fd0dc034faaa"
    },
    {
      "Start": "2a8cc1650e1241e9b3c008d7a5e10d17",
      "End": "0462873140eb403bae97bf9fcc44e066",
      "Id": "c347b54886bd45b29e9ab1938de2e6ce"
    },
    {
      "Start": "15ce416588454a658caf7da6ea9090da",
      "End": "7a09fe2dc7a645fb93c142039780be8e",
      "Id": "0e8a660f0da142cb92011f2dfbbc2aeb"
    },
    {
      "Start": "a3e03f84b5d24ddfb918cd0ddc54b179",
      "End": "fb7653bd20d5439ca121622131541b95",
      "Id": "107fa73698204d7b83163532074469b0"
    },
    {
      "Start": "b307ad37df0248d1a003d3c579eacf96",
      "End": "926ac1e6b6894a95b9d72b463403bb27",
      "Id": "ff18ea15910e458bbb476c88e54850b9"
    },
    {
      "Start": "82e7e69564474bc3a6cfbcb0162f6d4b",
      "End": "0addd5ce94e1416fbb16e1de85ecf2f6",
      "Id": "19a06a62b1354611baf4125c4cca84cb"
    },
    {
      "Start": "24698f3b97e34e67af8206b05d3d54d2",
      "End": "d462302f18be4d01b3d118a4b4d30145",
      "Id": "6c8b2bb8cf41487d935623e1690890a1"
    },
    {
      "Start": "b1dffe24570245ee9fb7ac6d8eaa259f",
      "End": "4a9c11d8e85f427ebdee789637a1a4eb",
      "Id": "e5f8c8b07d0c43a6a40aa3dd43344db4"
    },
    {
      "Start": "959b1a47cd3b4a2e819a3f9c5c78afc7",
      "End": "45a10d7a54c34a529cc9e3a8a270577a",
      "Id": "3ab3e150b08d430ab23dff78f2a14619"
    },
    {
      "Start": "5b301069cf5840738441b76037c4746b",
      "End": "086c72a254be45c990c990a5b22e93d9",
      "Id": "cc4bb2e4262f4b139a08da36b3c979d1"
    },
    {
      "Start": "fbdb0a3aaa76401ea842f108d93ebdb8",
      "End": "6f38b9c27f7a4026ab7670ae58de2ceb",
      "Id": "0c8c5005f76a48488f4e92416f2f6561"
    },
    {
      "Start": "2d708ca724ba4a2886cfec72f9e1dc37",
      "End": "bd0b3ce3ead24792b052aaab620cd2f6",
      "Id": "11080a24ff67437d9e768b5398c444d3"
    },
    {
      "Start": "23aeb3b46ce644f0816865678c47286c",
      "End": "fc53964fc91a4584bff20174681296f6",
      "Id": "14445c9767384189966fb14cbd963323"
    },
    {
      "Start": "815ff558a4c44e0bbab973849155b66a",
      "End": "7e91fc813eea4e138ae0dc343d5cd328",
      "Id": "32dc3de5b86142f7af45c42227106b92"
    },
    {
      "Start": "105c51ac66d6434fa296e9ba2663fbd1",
      "End": "ec3070c046664acab4dcd340712b6a8b",
      "Id": "fc00162ddcc040f289875b88b23f9b90"
    },
    {
      "Start": "2b0dc37cf8e7416b8433073c4f6bbbd3",
      "End": "f9d13d8669cd434e9c5510e5186aed7e",
      "Id": "1aed865b7a0d47648050e8711c787500"
    },
    {
      "Start": "2b0dc37cf8e7416b8433073c4f6bbbd3",
      "End": "2b9dbab0944a4c87814376cda88c6a81",
      "Id": "5824d8b1c63d4c7fa622f16bf38a07ec"
    },
    {
      "Start": "8b7920c29664491db427f952a7efe7a6",
      "End": "e9c2ff06c3a44c4eb19de5f95b0fb66a",
      "Id": "15fed1d6e5b64947bae601cdb06166f8"
    },
    {
      "Start": "de5339e8d0bb4262a8cd0dc5c41e5fd1",
      "End": "3816da35253d4c4e9e38bff04fb1b208",
      "Id": "9631b3106f484477832c3c85370ee7b6"
    },
    {
      "Start": "de5339e8d0bb4262a8cd0dc5c41e5fd1",
      "End": "ef09abe1691b4d59aa2bf25c25713642",
      "Id": "7454fd226bc648eaa4f47349cd9f0a20"
    },
    {
      "Start": "de5339e8d0bb4262a8cd0dc5c41e5fd1",
      "End": "b1e672e28c544c0da84e7d5b9f39056f",
      "Id": "18b1f1bccd76486caccc5804ded22b7c"
    },
    {
      "Start": "de5339e8d0bb4262a8cd0dc5c41e5fd1",
      "End": "eaf0208f91154a6ba90557eac5b6d5fb",
      "Id": "3ba67db1e1e6402085b06fa0da1911df"
    },
    {
      "Start": "e8c13b1471584624aacfc051373d6065",
      "End": "d88c91dc7b9e4d7b9d1edca1c71f4c69",
      "Id": "5e44b24eb39c406bba95f839a79b94a7"
    }
  ],
  "Dependencies": [],
  "Bindings": [
    {
      "NodeId": "49787469-e041-40d6-aa68-822e068d0447",
      "Binding": {
        "ByPoint_InClassDecl-1_InFunctionScope-1_Instance0_49787469-e041-40d6-aa68-822e068d0447": ""
      }
    }
  ],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.1.0.7500",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -4144.5667609334305,
      "EyeY": 3652.617951637887,
      "EyeZ": 7596.9131822144118,
      "LookX": -358.96085655863271,
      "LookY": -530.64744369047776,
      "LookZ": -6205.4784101897112,
      "UpX": 0.00753779116721261,
      "UpY": 0.99144486137381149,
      "UpZ": 0.13030835951613071
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Bottom Edge",
        "Id": "4bceb8fca29c42ce89a2022a5939b6c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1206.5153627202958,
        "Y": -208.16694709207337
      },
      {
        "ShowGeometry": true,
        "Name": "Left Edge",
        "Id": "b90954a764684e4598a71bf54aa906b9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1204.1969409750727,
        "Y": -77.758404243959149
      },
      {
        "ShowGeometry": true,
        "Name": "Curve.Length",
        "Id": "53a9abcf5f9c4605a12d83dbe8ea0563",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1481.2054778094425,
        "Y": -213.73445822156873
      },
      {
        "ShowGeometry": true,
        "Name": "Curve.Length",
        "Id": "72e2b4c3df4142389291658dc5aafa4b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2044.2054778094428,
        "Y": 184.968920629202
      },
      {
        "ShowGeometry": true,
        "Name": "Curve.PointAtSegmentLength",
        "Id": "f904f066f0ac4f7eb4e2c56b2ea5a0ac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2355.2054778094425,
        "Y": 12.765541778431384
      },
      {
        "ShowGeometry": true,
        "Name": "Height and Length",
        "Id": "36e166490df3464b99a6331c6f51b7c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1126.2777633048904,
        "Y": 122.04790957405828
      },
      {
        "ShowGeometry": true,
        "Name": "/",
        "Id": "49e09e6dc1b84335ad5fc8bf467df764",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2355.2054778094425,
        "Y": 159.23446101227847
      },
      {
        "ShowGeometry": true,
        "Name": "/",
        "Id": "1819459f0cd34183be74038351854c42",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1775.2054778094428,
        "Y": -196.23445822156873
      },
      {
        "ShowGeometry": true,
        "Name": "Math.Ceiling",
        "Id": "6440955f005742fc934fe31ddce32080",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2700.2054778094425,
        "Y": 159.23446101227847
      },
      {
        "ShowGeometry": true,
        "Name": "Math.Ceiling",
        "Id": "4b95c6e62c124bf48ade87637f02c6f1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2044.2054778094428,
        "Y": -196.23445822156873
      },
      {
        "ShowGeometry": true,
        "Name": "/",
        "Id": "8f056d9ecf08417098cf1aaeb72661ae",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3011.2054778094425,
        "Y": 210.70338024612556
      },
      {
        "ShowGeometry": true,
        "Name": "Sequence",
        "Id": "72b488676dbd4f31ac2642cc2d13b5de",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3304.2054778094425,
        "Y": 55.765541778431384
      },
      {
        "ShowGeometry": true,
        "Name": "Point.X",
        "Id": "daa9d14e819f4566a13573bd3aaea604",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2700.2054778094425,
        "Y": -254.23445822156873
      },
      {
        "ShowGeometry": true,
        "Name": "Point.Y",
        "Id": "f88beaafd47d4948af930ced04def44a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3304.2054778094425,
        "Y": -53.234458221568616
      },
      {
        "ShowGeometry": true,
        "Name": "Point.Z",
        "Id": "e69690de6fa447f8b47c86378ff6fa61",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3011.2054778094425,
        "Y": 55.765541778431384
      },
      {
        "ShowGeometry": true,
        "Name": "Sequence",
        "Id": "2c9f4c268eeb427594eb3ada8cdd3267",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3304.2054778094425,
        "Y": -213.23445822156873
      },
      {
        "ShowGeometry": true,
        "Name": "Point.ByCoordinates",
        "Id": "94fc97d97bc84b4087fcb30adf8bb7cf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3597.205477809443,
        "Y": -96.234458221568673
      },
      {
        "ShowGeometry": true,
        "Name": "/",
        "Id": "62e870dd982a488380abf6e5c62fa0c4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2355.2054778094425,
        "Y": -231.23445822156873
      },
      {
        "ShowGeometry": true,
        "Name": "FamilyInstance.ByPoint",
        "Id": "49787469e04140d6aa68822e068d0447",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3110.3457676501712,
        "Y": -723.89532791091688
      },
      {
        "ShowGeometry": true,
        "Name": "Family Types",
        "Id": "f25d77b5f16243a48d12471a5b553f22",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2779.3457676501712,
        "Y": -723.89532791091688
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "dba440fa93664a89838a2c850ba2228c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3485.3457676501712,
        "Y": -646.10866124425024
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "02cb15558487458a8ff494cb704ceac9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3110.3457676501712,
        "Y": -589.89532791091688
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "894c99a658234cfc9d7bdf9ccda3e51b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3110.3457676501712,
        "Y": -481.89532791091682
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "3fd4469c4f2a4e5aaf41cd01ef75355d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3485.3457676501712,
        "Y": -486.10866124425019
      },
      {
        "ShowGeometry": true,
        "Name": "+",
        "Id": "603c615165364a598f47c10a008f4450",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3011.2054778094425,
        "Y": -213.23445822156873
      },
      {
        "ShowGeometry": true,
        "Name": "/",
        "Id": "b1b2ba21d07e4656aa5509d4da2305a2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2700.2054778094425,
        "Y": -146.23445822156873
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "c0b9af56734c482bad58968eba538659",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2355.2054778094425,
        "Y": -97.02112488823542
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b78d3f151d234c19a5753895f74f8e4a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6715.0095789694187,
        "Y": -1208.9530273619398
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "1b06c3a4f6a644b7a13ee04d7f6c415e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6715.0095789694187,
        "Y": -1100.9530273619398
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b4d2bd5296bc42d1b9d4dba5727fbbb5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6715.0095789694187,
        "Y": -992.95302736194
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "0aedd705246e404ba87a03dd2565dec6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6984.0095789694187,
        "Y": -1292.1663606952734
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "df19aa7d69a648d38e3bd0459de63e16",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6984.0095789694187,
        "Y": -1131.1663606952734
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "753dda95e7f9440c8bae1da4cf38e1ec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6984.0095789694187,
        "Y": -970.1663606952734
      },
      {
        "ShowGeometry": true,
        "Name": "Math.RandomList",
        "Id": "b0aee93a1e674e5d966e404b75ea8b73",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5012.0095789694187,
        "Y": -1682.0415384979915
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "5723787d57b14fc697178b9548a6a75c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4741.0095789694187,
        "Y": -1682.0415384979915
      },
      {
        "ShowGeometry": true,
        "Name": "Integer Slider",
        "Id": "191bbb61fde84c40a6cf4b70dafe7e39",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1124.3449572177683,
        "Y": 315.00352711465996
      },
      {
        "ShowGeometry": true,
        "Name": "*",
        "Id": "83fac4dddf95429d9c4412eb1fb4762a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6177.0095789694187,
        "Y": -1627.736943038035
      },
      {
        "ShowGeometry": true,
        "Name": "+",
        "Id": "a879a774508f471ab411fe195d045c58",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6715.0095789694187,
        "Y": -1664.9530273619398
      },
      {
        "ShowGeometry": true,
        "Name": "+",
        "Id": "5d5fe76a218243079122ea0953e74898",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6715.0095789694187,
        "Y": -1528.9557783525115
      },
      {
        "ShowGeometry": true,
        "Name": "+",
        "Id": "a8dc13f00c8649c985bcc14a07a52278",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6715.0095789694187,
        "Y": -1342.9530273619403
      },
      {
        "ShowGeometry": true,
        "Name": "Integer Slider",
        "Id": "eb08eef2163b4749b90d762f5e0fed32",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1121.8013536962612,
        "Y": 392.00355523552696
      },
      {
        "ShowGeometry": true,
        "Name": "/",
        "Id": "2800cae3be3c46e6a6c8373a38aa65c1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6446.0095789694187,
        "Y": -1532.8436097047015
      },
      {
        "ShowGeometry": true,
        "Name": "/",
        "Id": "ad1be18b3e7e41a79cf6dc041502eec0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6446.0095789694187,
        "Y": -1262.843609704702
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "3d7caca3a8004313aa40cfc415a51bf2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6177.0095789694187,
        "Y": -1277.736943038035
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "04f09dd4f8be437590f97a07ec7801ed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6177.0095789694187,
        "Y": -1169.736943038035
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "47771a99ee6f40eda62d46167b2b3053",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4455.0095789694187,
        "Y": -1701.5415384979915
      },
      {
        "ShowGeometry": true,
        "Name": "Math.Ceiling",
        "Id": "b263ba181b3240cb9006b5f96584ac85",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5597.0095789694187,
        "Y": -1643.0415384979915
      },
      {
        "ShowGeometry": true,
        "Name": "*",
        "Id": "15e3cad07dbf4e03b569ef26bde355e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5328.0095789694187,
        "Y": -1643.0415384979915
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "2dc14ace88af4e53abc5e258b07b3a16",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5012.0095789694187,
        "Y": -1573.8282051646584
      },
      {
        "ShowGeometry": true,
        "Name": "/",
        "Id": "afa8f98887704392a87295ca7fb08bcc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5908.0095789694187,
        "Y": -1643.0415384979915
      },
      {
        "ShowGeometry": true,
        "Name": "Color Range",
        "Id": "b3f97d31ac154c50b68cd0158afe9b71",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4743.7329118528087,
        "Y": -636.34759928495669
      },
      {
        "ShowGeometry": true,
        "Name": "Color Palette",
        "Id": "7ef75388ccc3486c9e764f373b0b6e97",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4321.7329118528087,
        "Y": -728.34759928495669
      },
      {
        "ShowGeometry": true,
        "Name": "Color Palette",
        "Id": "8e948bc9c5244c4badd8e800916a94bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4321.7329118528087,
        "Y": -618.77426595162331
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d2926b28c2994482a82d6c85d42b993d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4545.7329118528087,
        "Y": -678.13426595162332
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "10af42e9d9e34472a7de990f4e152533",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4545.7329118528087,
        "Y": -560.13426595162332
      },
      {
        "ShowGeometry": true,
        "Name": "Element.OverrideColorInView",
        "Id": "da63f8506884491baf86bc52155ea36b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5139.7329118528087,
        "Y": -662.34759928495669
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d9b632aecd064c36afca6698b9461b60",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6177.0095789694187,
        "Y": -1385.736943038035
      },
      {
        "ShowGeometry": true,
        "Name": "/",
        "Id": "092064a49b9744769cde55febba5674c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6446.0095789694187,
        "Y": -1397.0624450191785
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "59b00b4844c744fc922db389820ce7c8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6177.0095789694187,
        "Y": -1493.736943038035
      },
      {
        "ShowGeometry": true,
        "Name": "/",
        "Id": "1cda8a2d940342c2bb965c9250ec6e03",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6446.0095789694187,
        "Y": -1667.0624450191781
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "2598fc6e047743218e62b40c20c5c372",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5136.8145355836486,
        "Y": -134.25736096169447
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a332e64cd7184083ad31de31e665cc1b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5136.8145355836486,
        "Y": -25.2573609616947
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e6fe0f338efe462f9ecebd24d5d82298",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5136.8145355836486,
        "Y": 190.74263903830541
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "62ea52378db7479aa60760a99e56c721",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5284.8121145412852,
        "Y": 199.16868845038238
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "d5f124ac70fa41a9bab55029900d4d35",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5284.8121145412852,
        "Y": 39.168688450382604
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "8573ad624e07413aabfb4d480ab3e4ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5284.8121145412852,
        "Y": -120.83131154961751
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script From String",
        "Id": "95f9482a59eb4594835a59b26e8ba032",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4864.7881965126535,
        "Y": -121.58603051059191
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "4a319c556eaf4943bdcd41b8dc50665b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4322.987944833586,
        "Y": -122.24189890659687
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "06555fba4d8245cfa222059997831872",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5136.8145355836486,
        "Y": 82.742639038305413
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "25ef94ad156541eca588f18e804d7f38",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5131.8954478902724,
        "Y": 293.82355134492917
      },
      {
        "ShowGeometry": true,
        "Name": "Element.OverrideColorInView",
        "Id": "78c82aef2f7544419f608452601e0292",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5142.650994363622,
        "Y": 546.45903772738177
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "5a3f43d646dc4cf38a9117a01a90acba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4518.2585206766871,
        "Y": 691.22183422242381
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "4b01ca2cf3df401680a103e9b00926fb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4548.650994363622,
        "Y": 530.67237106071468
      },
      {
        "ShowGeometry": true,
        "Name": "Color Palette",
        "Id": "101e7086d71b45628e64680c141c19e8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4324.650994363622,
        "Y": 590.03237106071481
      },
      {
        "ShowGeometry": true,
        "Name": "Color Palette",
        "Id": "2c9c786ad4fc4b50824524faa21beb37",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4324.650994363622,
        "Y": 480.45903772738177
      },
      {
        "ShowGeometry": true,
        "Name": "Color Range",
        "Id": "480b547f4a014d1a81cc0b118db58f56",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4746.650994363622,
        "Y": 572.45903772738177
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "15c8dec75bff47a5946d3979ec9f2603",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4619.6528132027915,
        "Y": -271.68590467105793
      },
      {
        "ShowGeometry": true,
        "Name": "List.MaximumItem",
        "Id": "ce8e81ac6db54aa1bb4624979b863816",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4863.4530648818591,
        "Y": -245.71682878125358
      },
      {
        "ShowGeometry": true,
        "Name": "/",
        "Id": "2bed0552a69c49a3bb2696afb25b98c0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5136.8145355836486,
        "Y": -268.47069429502795
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script From String",
        "Id": "e55d99cc4b0d4bd79d044b6d18b11203",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5340.2984732932618,
        "Y": -271.52032893191137
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a512075472a34d098939a24c1fb1e77f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4927.1867953602732,
        "Y": -370.26976962091538
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "4dab3ca6968a47d99c3b58f0a67b208a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4142.5025081732938,
        "Y": -728.99321737717594
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "1c3f15101a3b40f98969c6b7d532c9d6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4322.67048119208,
        "Y": -1695.7312167214777
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "819c7288a39a47d78d3e502a877d20f2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4324.1531210608773,
        "Y": -245.83891106311734
      },
      {
        "ShowGeometry": true,
        "Name": "Integer Slider",
        "Id": "d50e6aa044684d86a949f9caec03a71a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3814.4247747083518,
        "Y": -685.56710415051521
      }
    ],
    "Annotations": [
      {
        "Id": "c92e5e9d1093457b8c3548eff6560f26",
        "Title": "Select panel edges",
        "Nodes": [
          "4bceb8fca29c42ce89a2022a5939b6c2",
          "b90954a764684e4598a71bf54aa906b9"
        ],
        "Left": 1194.1969409750727,
        "Top": -304.16694709207337,
        "Width": 241.31842174522308,
        "Height": 345.40854284811422,
        "FontSize": 36.0,
        "InitialTop": -208.16694709207337,
        "InitialHeight": 347.64351813865005,
        "TextblockHeight": 86.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "0b9268145e2d4460b56929f788a382e3",
        "Title": "Panel Size",
        "Nodes": [
          "36e166490df3464b99a6331c6f51b7c7"
        ],
        "Left": 1116.2777633048904,
        "Top": 69.047909574058281,
        "Width": 319.0,
        "Height": 121.0,
        "FontSize": 36.0,
        "InitialTop": 122.04790957405828,
        "InitialHeight": 98.0,
        "TextblockHeight": 43.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "0900ae499b3e4da2ae915d75a923af65",
        "Title": "Tessellate Panels",
        "Nodes": [
          "53a9abcf5f9c4605a12d83dbe8ea0563",
          "72e2b4c3df4142389291658dc5aafa4b",
          "f904f066f0ac4f7eb4e2c56b2ea5a0ac",
          "49e09e6dc1b84335ad5fc8bf467df764",
          "1819459f0cd34183be74038351854c42",
          "6440955f005742fc934fe31ddce32080",
          "4b95c6e62c124bf48ade87637f02c6f1",
          "8f056d9ecf08417098cf1aaeb72661ae",
          "72b488676dbd4f31ac2642cc2d13b5de",
          "daa9d14e819f4566a13573bd3aaea604",
          "f88beaafd47d4948af930ced04def44a",
          "e69690de6fa447f8b47c86378ff6fa61",
          "2c9f4c268eeb427594eb3ada8cdd3267",
          "94fc97d97bc84b4087fcb30adf8bb7cf",
          "62e870dd982a488380abf6e5c62fa0c4",
          "603c615165364a598f47c10a008f4450",
          "b1b2ba21d07e4656aa5509d4da2305a2",
          "c0b9af56734c482bad58968eba538659"
        ],
        "Left": 1471.2054778094425,
        "Top": -307.23445822156873,
        "Width": 2294.0000000000005,
        "Height": 636.93783846769429,
        "FontSize": 36.0,
        "InitialTop": -254.23445822156873,
        "InitialHeight": 1184.4182724121945,
        "TextblockHeight": 43.0,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "7185c5f896c7413da08d4a6975d557de",
        "Title": "Add wall panels",
        "Nodes": [
          "49787469e04140d6aa68822e068d0447",
          "f25d77b5f16243a48d12471a5b553f22",
          "dba440fa93664a89838a2c850ba2228c",
          "02cb15558487458a8ff494cb704ceac9",
          "894c99a658234cfc9d7bdf9ccda3e51b",
          "3fd4469c4f2a4e5aaf41cd01ef75355d"
        ],
        "Left": 2769.3457676501712,
        "Top": -776.89532791091688,
        "Width": 996.0,
        "Height": 435.78666666666669,
        "FontSize": 36.0,
        "InitialTop": -723.89532791091688,
        "InitialHeight": 704.51283063851827,
        "TextblockHeight": 43.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "739086258e5b4db08ac5ec0aa3a28d1b",
        "Title": "Panel Depth Settings",
        "Nodes": [
          "191bbb61fde84c40a6cf4b70dafe7e39",
          "eb08eef2163b4749b90d762f5e0fed32"
        ],
        "Left": 1111.8013536962612,
        "Top": 219.00352711465996,
        "Width": 321.54360352150707,
        "Height": 241.000028120867,
        "FontSize": 36.0,
        "InitialTop": 315.00352711465996,
        "InitialHeight": 176.2577339110897,
        "TextblockHeight": 86.0,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "41373b2df4c34d81b1f804be7196ede0",
        "Title": "Random Panel Depth",
        "Nodes": [
          "b78d3f151d234c19a5753895f74f8e4a",
          "1b06c3a4f6a644b7a13ee04d7f6c415e",
          "b4d2bd5296bc42d1b9d4dba5727fbbb5",
          "0aedd705246e404ba87a03dd2565dec6",
          "df19aa7d69a648d38e3bd0459de63e16",
          "753dda95e7f9440c8bae1da4cf38e1ec",
          "b0aee93a1e674e5d966e404b75ea8b73",
          "5723787d57b14fc697178b9548a6a75c",
          "83fac4dddf95429d9c4412eb1fb4762a",
          "a879a774508f471ab411fe195d045c58",
          "5d5fe76a218243079122ea0953e74898",
          "a8dc13f00c8649c985bcc14a07a52278",
          "2800cae3be3c46e6a6c8373a38aa65c1",
          "ad1be18b3e7e41a79cf6dc041502eec0",
          "3d7caca3a8004313aa40cfc415a51bf2",
          "04f09dd4f8be437590f97a07ec7801ed",
          "47771a99ee6f40eda62d46167b2b3053",
          "b263ba181b3240cb9006b5f96584ac85",
          "15e3cad07dbf4e03b569ef26bde355e9",
          "2dc14ace88af4e53abc5e258b07b3a16",
          "afa8f98887704392a87295ca7fb08bcc",
          "d9b632aecd064c36afca6698b9461b60",
          "092064a49b9744769cde55febba5674c",
          "59b00b4844c744fc922db389820ce7c8",
          "1cda8a2d940342c2bb965c9250ec6e03",
          "1c3f15101a3b40f98969c6b7d532c9d6"
        ],
        "Left": 4312.67048119208,
        "Top": -1754.5415384979915,
        "Width": 2951.3390977773388,
        "Height": 929.3751778027181,
        "FontSize": 36.0,
        "InitialTop": -1701.5415384979915,
        "InitialHeight": 737.93638481809865,
        "TextblockHeight": 43.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "b0f5e1b71b704c3ca3223f2119f890dd",
        "Title": "Colour Panels",
        "Nodes": [
          "b3f97d31ac154c50b68cd0158afe9b71",
          "7ef75388ccc3486c9e764f373b0b6e97",
          "8e948bc9c5244c4badd8e800916a94bb",
          "d2926b28c2994482a82d6c85d42b993d",
          "10af42e9d9e34472a7de990f4e152533",
          "da63f8506884491baf86bc52155ea36b"
        ],
        "Left": 4311.7329118528087,
        "Top": -781.34759928495669,
        "Width": 1057.0,
        "Height": 314.21333333333337,
        "FontSize": 36.0,
        "InitialTop": -728.34759928495669,
        "InitialHeight": 363.51917466060536,
        "TextblockHeight": 43.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "316448b66f9c472ba562ae0275e7c483",
        "Title": "Colour Panels",
        "Nodes": [
          "480b547f4a014d1a81cc0b118db58f56",
          "2c9c786ad4fc4b50824524faa21beb37",
          "101e7086d71b45628e64680c141c19e8",
          "4b01ca2cf3df401680a103e9b00926fb",
          "5a3f43d646dc4cf38a9117a01a90acba",
          "78c82aef2f7544419f608452601e0292"
        ],
        "Left": 4314.650994363622,
        "Top": 427.45903772738177,
        "Width": 1057.0,
        "Height": 356.76279649504204,
        "FontSize": 36.0,
        "InitialTop": 480.45903772738177,
        "InitialHeight": 291.213333333333,
        "TextblockHeight": 43.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "22ef7aaf764846ef82ca0b14c69e3bda",
        "Title": "Top down panel depths",
        "Nodes": [
          "2598fc6e047743218e62b40c20c5c372",
          "a332e64cd7184083ad31de31e665cc1b",
          "e6fe0f338efe462f9ecebd24d5d82298",
          "62ea52378db7479aa60760a99e56c721",
          "d5f124ac70fa41a9bab55029900d4d35",
          "8573ad624e07413aabfb4d480ab3e4ca",
          "95f9482a59eb4594835a59b26e8ba032",
          "4a319c556eaf4943bdcd41b8dc50665b",
          "06555fba4d8245cfa222059997831872",
          "25ef94ad156541eca588f18e804d7f38",
          "15c8dec75bff47a5946d3979ec9f2603",
          "ce8e81ac6db54aa1bb4624979b863816",
          "2bed0552a69c49a3bb2696afb25b98c0",
          "e55d99cc4b0d4bd79d044b6d18b11203",
          "a512075472a34d098939a24c1fb1e77f",
          "819c7288a39a47d78d3e502a877d20f2"
        ],
        "Left": 4312.987944833586,
        "Top": -423.26976962091538,
        "Width": 1251.8241697076992,
        "Height": 810.09332096584455,
        "FontSize": 36.0,
        "InitialTop": -370.26976962091538,
        "InitialHeight": 1453.1649918951412,
        "TextblockHeight": 43.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "8d98c4ca75a84bb9b0556694427e8b40",
        "Title": "Panel depth method",
        "Nodes": [
          "4dab3ca6968a47d99c3b58f0a67b208a",
          "d50e6aa044684d86a949f9caec03a71a"
        ],
        "Left": 3804.4247747083518,
        "Top": -781.99321737717594,
        "Width": 472.07773346494196,
        "Height": 164.42611322666073,
        "FontSize": 36.0,
        "InitialTop": -728.99321737717594,
        "InitialHeight": 141.42611322666073,
        "TextblockHeight": 43.0,
        "Background": "#FFBB87C6"
      }
    ],
    "X": -14.112847758327348,
    "Y": 310.59230641774627,
    "Zoom": 0.079810771387726673
  }
}